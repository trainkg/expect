<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.barley</groupId>
	<artifactId>org.barley</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<modules>
		<module>build</module>
		<module>barley.base</module>
		<!-- <module>barley.party</module> -->
		<!-- <module>barley.sercurity</module>
		<module>barley.config</module> -->
		<!-- <module>distribution</module> -->
		<module>barley.statics</module>
		<module>ls.pom.xml</module>
	</modules>
	<!-- 环境变量，POM信息，和Maven Settings -->
	<!-- ${basedir} 项目根目录
	${project.build.directory} 构建目录，缺省为target
	${project.build.outputDirectory} 构建过程输出目录，缺省为target/classes
	${project.build.finalName} 产出物名称，缺省为${project.artifactId}-${project.version}
	${project.packaging} 打包类型，缺省为jar
	${project.xxx} 当前pom文件的任意节点的内容 -->
	
	<properties>
		<!-- 平台统一版本 -->
		<!-- <project.version>0.0.2-SNAPSHOT</project.version> -->
		<ls.version>0.0.1-SNAPSHOT</ls.version>
		<lombok.version>1.16.4</lombok.version>
		<logback.version>1.1.3</logback.version>
		<apache.lang>3.1</apache.lang>
		<apache.beanutils>1.8.3</apache.beanutils>
		<commons.logging>1.2</commons.logging>
		<commons.io>2.2</commons.io>
		<org.slf4j>1.7.5</org.slf4j>
		<spring.version>5.2.5.RELEASE</spring.version>
		<lockback.version>1.0.13</lockback.version>
		<log4j.over.slf4j>1.7.7</log4j.over.slf4j>
		<!-- <poi.version>3.9</poi.version> -->
		<hibernate.version>4.2.3.Final</hibernate.version>
		<hibernate.validate.version>5.0.2.Final</hibernate.validate.version>
		<freemarker.version>2.3.20</freemarker.version>
		<ls.module.skip>true</ls.module.skip>
		<jetty.web.version>9.2.6.v20141205</jetty.web.version>
		<mybatis>3.5.4</mybatis>
		<mybatis.spring>2.0.4</mybatis.spring>
		<mysql.version>5.1.25</mysql.version>
	</properties>

	<build>
		<!-- 
			管理所有的插件定义，如果模块需要使用插件的话，直接使用maven坐标，可以减少配置
		 -->
		<pluginManagement>
			<plugins>
				<!-- mybatis 生成插件 -->
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>1.4.0</version>
					<configuration>
						<verbose>true</verbose>
						<overwrite>true</overwrite>
						<configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
						<!-- 为 true，则“compile”，“provided”和“system”范围的依赖项将添加到生成器的类路径中 -->
	                    <includeCompileDependencies>true</includeCompileDependencies>
	                    <!-- 为true，则将任何范围的依赖项添加到生成器的类路径中 -->
	                    <includeAllDependencies>true</includeAllDependencies>
	                    <!-- 配置文件中的 contexts -->
	                    <contexts>DMySQLTables</contexts>	
					</configuration>
				</plugin>
				<!-- maven 编译插件 version 需要3.3 以上才能支持lombok编译设定 -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>utf-8</encoding>
					</configuration>
					<executions>
						<execution>
							<id>default-testCompile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
						<execution>
							<id>default-compile</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- maven 源码打包插件 -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<id>default-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>resources</goal>
							</goals>
						</execution>
						<execution>
							<id>default-testResources</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>testResources</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
					<executions>
						<execution>
							<id>default-deploy</id>
							<phase>deploy</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- maven 发布插件 -->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12.4</version>
					<executions>
						<execution>
							<id>default-test</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<includes>
							<include>org.codehaus.plexus:*</include>
							<include>junit:junit</include>
						</includes>
						<excludes>
							<exclude>org.codehaus.plexus:plexus-utils</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.0.0</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
						</dependency>
					</dependencies>
				</plugin>
				<!-- target 内部是ANT 脚本， 可以引用XML文件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<dependencies>
						<!-- <dependency>
						    <groupId>org.apache.ant</groupId>
						    <artifactId>ant</artifactId>
						    <version>1.8.4 </version>
						    <scope>compile</scope>
						</dependency> -->
						<dependency>
							<groupId>org.apache.ant</groupId>
				            <artifactId>ant-nodeps</artifactId>
				            <version>1.8.1</version>
				            <scope>compile</scope>
						</dependency>
						<dependency>
						    <groupId>ant-contrib</groupId>
						    <artifactId>ant-contrib</artifactId>
						    <version>1.0b3</version>
						    <exclusions>
						      <exclusion>
						        <groupId>ant</groupId>
						        <artifactId>ant</artifactId>
						      </exclusion>
						    </exclusions>
						  </dependency>
					</dependencies>
					<executions>
						<execution>
							<id>compile</id>
							<phase>compile</phase>
							<inherited>true</inherited>
							<configuration>
								 <failOnError>false</failOnError>
								 <skip>${ls.module.skip}</skip>
							     <target name="copy-base-static" description="Copy Statics Files" unless="no">
							     	<!-- <if>
							     		<isset property="barley:barley.statics:jar"></isset>
							     		<then>
								     		<echo message="${staticsjar}"/>
											<property name="compile_classpath" 	refid="maven.compile.classpath" />
											<property name="runtime_classpath" 	refid="maven.runtime.classpath" />
											<property name="test_classpath" 	refid="maven.test.classpath" />
											<property name="plugin_classpath" 	refid="maven.plugin.classpath" />
											<available file="${barley:barley.statics:jar}" property="file.exist" type="file"></available>
											<echo message="${org.freemarker:freemarker:jar}"/>
											<echo message="${barley:barley.statics:jar}"/>
											<echo message="${project.packaging} "/> 
											<echo message="${basedir}"/>
											<echo message="${project.build.directory}"/>
											<echo message="${project.build.outputDirectory} "/>
											<echo message="${project.build.finalName}"/>
											<echo message="${project.baseUri}"/>
											<echo message="${project.packaging} "/> 
							                <echo message="${barley:barley.statics:jar}"/>
											<unjar src="${barley:barley.statics:jar}" overwrite="true" dest="src/main/webapp"></unjar>
							     		</then>
							     	</if> -->
							     	<echo message="current dir is ${basedir}"/>
							     	<!-- <ant antfile="${project.build.directory}/build.xml">
							     	  <property name="compile_classpath" 	refid="maven.compile.classpath" />
									  <property name="runtime_classpath" 	refid="maven.runtime.classpath" />
									  <property name="test_classpath" 		refid="maven.test.classpath" />
									  <property name="plugin_classpath" 	refid="maven.plugin.classpath" />
					                  <target name="compile"/>
					                </ant> -->
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[1.0.0,)
										</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.1</version>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		 
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis.spring}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons.logging}</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${apache.beanutils}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${apache.lang}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${log4j.over.slf4j}</version>
		</dependency>
		<!-- <dependency> <groupId>ch.qos.logback</groupId> <artifactId>logback-core</artifactId> 
			<version>${lockback.version}</version> </dependency> <dependency> <groupId>ch.qos.logback</groupId> 
			<artifactId>logback-classic</artifactId> <version>${lockback.version}</version> 
			</dependency> -->

		<!-- ORM -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validate.version}</version>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- POI -->
		<!-- <dependency> <groupId>org.apache.poi</groupId> <artifactId>poi</artifactId> 
			<version>${poi.version}</version> </dependency> <dependency> <groupId>org.apache.poi</groupId> 
			<artifactId>poi-ooxml</artifactId> <version>${poi.version}</version> </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>stax2-api</artifactId>
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.2.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.2.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.2.3</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.aopalliance</groupId>
			<artifactId>com.springsource.org.aopalliance</artifactId>
			<version>1.0.0</version>
		</dependency> -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>12.0</version>
		</dependency>
		<!-- <dependency>
			<groupId>com.google.code.kaptcha</groupId>
			<artifactId>kaptcha</artifactId>
			<version>2.3.2</version>
		</dependency> -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>2.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>2.7.7</version>
		</dependency> -->
	</dependencies>

	<!-- <repositories> <repository> <id>projectlombok.org</id> <url>http://projectlombok.org/mavenrepo</url> 
		</repository> <repository> <id>apache.snapshots</id> <url>http://repository.apache.org/snapshots</url> 
		</repository> </repositories> -->
		
	<!-- 编译的环境自动识别 -->
	<!-- 利用profile区别不同的module类型，决定执行不同的脚本 -->
	<profiles>
		<profile>
			<id>JDK1.8</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<jdk>1.8</jdk>
			</activation>
			<properties>
				<maven.compiler.source>1.8</maven.compiler.source>
				<maven.compiler.target>1.8</maven.compiler.target>
				<maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
			</properties>
			<repositories>
				<repository>
					<id>central</id>
					<!-- https 要求开启 TLSv1.2 协议 -->
					<url>https://repo1.maven.org/maven2</url>
					<releases>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>central</id>
					<url>https://repo1.maven.org/maven2</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<id>format</id>
			<build>
				<defaultGoal>compile</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jalopy-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
						<artifactId>maven-java-formatter-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- 提供对模块内的静态资源打包支持 -->
		<profile>
			<id>module-statics</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/statics</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<!-- statics模块copy打包配置文件 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
							    <id>copy-config</id>
							    <phase>generate-sources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.barley</groupId>
											<artifactId>barley.build</artifactId>
											<version>${project.version}</version>
											<classifier>build</classifier>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>target</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>target/assembly-web.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- module-webresourse
			1. 针对web资源模块， 提供单独启动支持，copy关联webapp设定，静态资源打包设定
		-->
		<profile>
			<id>module-webresourse</id>
			<!-- WEB 模块判断条件 / 存在webapp目录 -->
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/webapp</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<!-- <plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.4.1</version>
						<executions>
							<execution>
								<id>default-clean</id>
								<phase>clean</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>src/main/webapp</directory>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin> -->
					<!-- 通过Ant脚本,在MAVEN clean阶段清除webapp下的模块运行配置 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>clear-webapp-dir</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="clear-webapp-dir" description="clear ${project.build.directory}" unless="no">
							     	<delete verbose="true" includeEmptyDirs="true">
									  <fileset dir="${basedir}/src/main/webapp" includes="**/*" defaultexcludes="no"/>
									</delete>
								</target>
								</configuration>
							</execution>
						</executions>
					</plugin> 
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
						    <!-- build -->
						    <!-- copy database script assembly config. -->
							<execution>
							    <id>copy-config</id>
							    <phase>generate-sources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.barley</groupId>
											<artifactId>barley.build</artifactId>
											<version>${project.version}</version>
											<classifier>build</classifier>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>target</outputDirectory>
								</configuration>
							</execution>
							<!-- copy-web-config web.xml etc -->
							<!-- <execution>
							    <id>copy-web-config</id>
							    <phase>generate-sources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.barley</groupId>
											<artifactId>barley.build</artifactId>
											<version>${project.version}</version>
											<classifier>webserver</classifier>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>src/main/webapp</outputDirectory>
								</configuration>
							</execution> -->
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>