package com.barley.party.service;

import com.barley.party.mappers.UserTypeMapper;
import com.barley.party.modal.UserType;
import com.barley.party.service.searchvo.UserTypeSearchVO;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import java.util.List;
import org.barley.mybatis.CriteriaBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * @author peculiar.1@163.com
 * @version $ID: com.barley.party.service.UserTypeBaseService create date
 *          2020-12-27 12:09:54
 */
@Service
@Transactional
public class UserTypeServiceImpl implements UserTypeService {
	@Autowired
	protected UserTypeMapper entityMapper;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public UserType create(UserType record) {
		entityMapper.insert(record);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public void delete(Short keyId) {
		entityMapper.deleteByPrimaryKey(keyId);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public UserType update(UserType record) {
		entityMapper.updateByPrimaryKey(record);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public List<UserType> findAll() {
		UserTypeSearchVO searchvo = new UserTypeSearchVO();
		return entityMapper.searchByCriteria(searchvo);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public UserType findByPrimaryKey(Short keyId) {
		UserType entity = entityMapper.selectByPrimaryKey(keyId);
		return entity;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public List<UserType> searchByVO(UserTypeSearchVO searchVO) {
		PageInfo<UserType> pageInfo = internalfindBySearchVO(searchVO, null, null);
		return pageInfo.getList();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_user_type
	 *
	 * @mbg.generated
	 */
	public PageInfo<UserType> searchByVO(UserTypeSearchVO searchVO, int page, int pageSize) {
		return internalfindBySearchVO(searchVO, page, pageSize);
	}

	protected PageInfo<UserType> internalfindBySearchVO(UserTypeSearchVO searchvo, Integer page, Integer pageSize) {
		Page<Object> pagesvo = null;
		if (page != null) {
			pagesvo = PageHelper.startPage(page, pageSize);
		}
		if (searchvo instanceof CriteriaBuilder) {
			((CriteriaBuilder) searchvo).build();
		}
		List<UserType> list = entityMapper.searchByCriteria(searchvo);
		PageInfo<UserType> pageInfo = new PageInfo<UserType>(list, pageSize);
		if (pagesvo != null) {
			pageInfo.setTotal(pagesvo.getTotal());
		}
		return pageInfo;
	}

	@Override
	public List<UserType> findAllActive() {
		UserTypeSearchVO searchvo = new UserTypeSearchVO();
		short status = 1;
		searchvo.setTypeStatus(status);
		return searchByVO(searchvo);
	}
}