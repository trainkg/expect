package com.barley.party.service;

import com.barley.party.mappers.OrganizationMapper;
import com.barley.party.modal.Organization;
import com.barley.party.service.searchvo.OrganizationSearchVO;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import java.util.List;
import org.barley.mybatis.CriteriaBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * @author peculiar.1@163.com
 * @version $ID: com.barley.party.service.OrganizationBaseService create date 2020-12-27 12:09:54
 */
@Service
@Transactional
public class OrganizationServiceImpl implements OrganizationService {
    @Autowired
    protected OrganizationMapper entityMapper;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public Organization create(Organization record) {
        entityMapper.insert(record);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public void delete(String keyId) {
        entityMapper.deleteByPrimaryKey(keyId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public Organization update(Organization record) {
        entityMapper.updateByPrimaryKey(record);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public List<Organization> findAll() {
        OrganizationSearchVO searchvo = new OrganizationSearchVO();
        return entityMapper.searchByCriteria(searchvo);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public Organization findByPrimaryKey(String keyId) {
        Organization entity = entityMapper.selectByPrimaryKey(keyId);
        return entity;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public List<Organization> searchByVO(OrganizationSearchVO searchVO) {
        PageInfo<Organization> pageInfo = internalfindBySearchVO(searchVO, null, null);
        return pageInfo.getList();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbg.generated
     */
    public PageInfo<Organization> searchByVO(OrganizationSearchVO searchVO, int page, int pageSize) {
        return internalfindBySearchVO(searchVO, page, pageSize);
    }

    protected PageInfo<Organization> internalfindBySearchVO(OrganizationSearchVO searchvo, Integer page, Integer pageSize) {
        Page<Object> pagesvo = null;
        if (page != null) {
            pagesvo = PageHelper.startPage(page, pageSize);
        }
        if (searchvo instanceof CriteriaBuilder) {
            ((CriteriaBuilder) searchvo).build();
        }
        List<Organization> list = entityMapper.searchByCriteria(searchvo);
        PageInfo<Organization> pageInfo = new PageInfo<Organization>(list, pageSize);
        if (pagesvo != null) {
            pageInfo.setTotal(pagesvo.getTotal());
        }
        return pageInfo;
    }
}