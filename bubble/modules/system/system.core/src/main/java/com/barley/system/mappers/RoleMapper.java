package com.barley.system.mappers;

import java.util.List;

import org.apache.ibatis.annotations.Many;
import org.apache.ibatis.annotations.One;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.mapping.FetchType;

import com.barley.system.modal.Permission;
import com.barley.system.modal.Role;
import com.barley.system.modal.RoleWapper;
import com.barley.system.vo.RoleCriteria;

public interface RoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer listId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    //插入方法
    int insert(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    int insertSelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    List<Role> searchByCriteria(RoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    Role selectByPrimaryKey(Integer listId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_role
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Role record);
    
    
    @Select("select r.* from t_role r, t_role_user ru where r.list_id = ru.role_id and ru.user_id = #{userId}")
    List<Role> findByUserId(String userId);
    
    
    @Select("select * from t_role r, t_group_role gr, t_group g, t_role_permission rp, t_permission p where r.list_id = gr.role_id and gr.group_id = g.List_id and rp.role_id = r.list_id and rp.perm_id = p.list_id and g.List_id = #{groupId}")
    List<RoleWapper> findByGroup(Integer groupId);

    
    //@Select("select r.*,p.* from t_role r, t_role_user ru,t_role_permission rp, t_permission p where r.list_id = ru.role_id and rp.role_id = r.list_id and rp.perm_id = p.list_id and ru.user_id = #{userId}")
    @Select("select * from t_role_user a where a.user_id = #{userId}")
    @Results({
    	@Result(column="role_id", property = "role", one = @One(select = "com.barley.system.mappers.RoleMapper.selectByPrimaryKey", fetchType = FetchType.EAGER)),
    	@Result(column="role_id", property = "permissions", many  = @Many(select = "com.barley.system.mappers.PermissionMapper.findByRoleId", fetchType = FetchType.EAGER))
    })
    List<RoleWapper> loadingByUser(String userId);
}