<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
  		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
	<!-- spring context 扫描路径 -->
	<context:component-scan base-package="com.barley,org.activiti.rest">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 激活自动注入 -->
	<context:annotation-config />
	
	<!-- 激活 @Async and @Scheduled 注解特性 -->
	<task:annotation-driven/>
	
	<util:properties id="hibernateConfig" location="classpath*:/hibernate.properties"/>
	
	<!-- 系统配置信息管理 -->
	<bean id="sysPropties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/hibernate.properties</value>
				<value>classpath*:/repositoryConfig.properties</value>
				<value>classpath*:/mail.properties</value>
			</list>
		</property>
		<!-- 自定义变量 -->
		<!-- <property name="properties">
			<props>
				<prop key="database.type">mysql</prop>
				<prop key="timeoutUrl">http://oa.sugon.com</prop>
			</props>
		</property> -->
	</bean>
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">   
	     <property name="basename" value="app" />
	     <property name="defaultEncoding" value="UTF-8"/>
	     <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
    
	<!-- 数据库连接管理 -->
	<!-- id 统一命名，不允许变更 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.className}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="defaultAutoCommit" value="false" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="validationQuery" value="select 1"></property>
        <property name="initialSize" value="10" />
        <property name="maxTotal" value="100" />
        <property name="maxWaitMillis" value="-1" />
	</bean>
	
	<!-- 
	Jndi 没有搞定
	<bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/bubble</value>
		</property>
	</bean> 
	-->
	
	<!-- datasource 事务管理 -->
	<!-- id 统一命名，不允许变更 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
  	</bean>

  	<!-- 激活注解 @Transactional and @TransactionAttribute -->
  	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<import resource="classpath*:spring/spring-context-override.xml"/>
	<import resource="classpath*:spring/spring-context-mybatis.xml"/>
	<import resource="classpath*:config/activti-spring-context.xml"/>
	
	<!-- 使用固定的格式，自动加载 -->
	<!-- <import resource="classpath*:spring/spring-quartz.xml"/> -->
	<import resource="classpath*:spring/*-spring-context.xml"/>
	
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" depends-on="jtaDataSource">
		<property name="dataSource" ref="jtaDataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.sugon.**</value>
				<value>com.sugon.**.entity</value>
				<value>org.hlj.**.entity</value>
				<value>org.hlj.**.domain</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.formart_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>${database.type}/user-hbm.xml</value>
				<value>${database.type}/role-hbm.xml</value>
				<value>${database.type}/group-hbm.xml</value>
			</list>
		</property>
	</bean> -->

<!-- 	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" order="0"/> -->
	
	<!-- 事务的传播 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="do*" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="maint*" propagation="REQUIRED"/>
			<tx:method name="write*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice> -->
	<!-- 配置事务拦截器  or execution(* com.sugon.*.service.*.services..*.*(..)) com.sugon.sap.services -->
	<!-- <aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* com.sugon.*.service.*.service..*.*(..)) or execution(* org.hlj.*.service..*.*(..)) or execution(* com.sugon.sap.services..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" order="1"/>
	</aop:config> -->
	

	<!-- <import resource="spring-quartz.xml"/> -->
	
	<!-- 日志AOP 配置 -->
	
	<!-- <bean id ="businesslogAop" class="com.sugon.log.api.aop.AOPBusinessLog"/>
	<aop:config  proxy-target-class="true">
			<aop:pointcut expression="@annotation(com.sugon.log.api.SLog) 
			and args(..) and (execution(* org.hlj.performance_user..*.*(..)) or execution(* org.hlj.performance..*.*(..)) or execution(* com.sugon.sap..*.*(..)))" id="businesslogPC"/>
			<aop:aspect ref="businesslogAop">
				<aop:around method="record" pointcut-ref="businesslogPC" />
			</aop:aspect>
	</aop:config> -->
	
	<!--  各个模块中的bean定义，按照规定应该在 config目录下，命名为：xxx-service-context.xml -->
 	<!-- <import resource="classpath*:config/user-service-context.xml"/>
 	<import resource="classpath*:config/userresource-service-context.xml"/>
 	<import resource="classpath*:config/filesystem-service-context.xml"/>
 	<import resource="classpath*:spring/springcontext-ws.xml"/>
 	<import resource="classpath*:config/mail-config.xml"/> -->
 	<!-- 关闭初始化执行SQL -->
 	<!-- <beans>
		<jdbc:initialize-database data-source="jtaDataSource" ignore-failures="ALL">
			<jdbc:script location="classpath*:mysql/structure.sql" encoding="UTF-8" />
			<jdbc:script location="classpath*:mysql/jx-init.sql" encoding="UTF-8" />
		</jdbc:initialize-database>
	</beans> -->
	
	<!-- <beans profile="dev">
		<bean id="sysPropties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath*:/hibernate.properties</value>
					<value>classpath*:/repositoryConfig.properties</value>
					<value>classpath*:/mail.properties</value>
				</list>
			</property>
			<property name="properties">
				<props>
					<prop key="database.type">mysql</prop>
					<prop key="timeoutUrl">http://oa.sugon.com</prop>
				</props>
			</property>
		</bean>
 	</beans> -->
	
	<!-- <beans profile="production">
		<bean id="sysPropties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath*:/hibernate-product.properties</value>
					<value>classpath*:/repositoryConfig-product.properties</value>
					<value>classpath*:/mail.properties</value>
				</list>
			</property>
			<property name="properties">
				<props>
					<prop key="database.type">mysql</prop>
					<prop key="timeoutUrl">http://oa.sugon.com</prop>
				</props>
			</property>
		</bean>
	</beans> -->
</beans>